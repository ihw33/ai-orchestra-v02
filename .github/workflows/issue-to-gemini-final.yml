name: Issue to Gemini Automation

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  process-with-gemini:
    # Self-hosted runner ÎòêÎäî GitHub-hosted runner
    runs-on: ubuntu-latest
    
    # Issue Ï†úÎ™©Ïóê [CALC] ÌÉúÍ∑∏Í∞Ä ÏûàÏùÑ ÎïåÎßå Ïã§Ìñâ
    if: contains(github.event.issue.title, '[CALC]') || contains(github.event.comment.body, '/calculate')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Gemini CLI
        run: |
          npm install -g @gemini/cli
          # ÎòêÎäî Ïã§Ï†ú Gemini ÏÑ§Ïπò Î™ÖÎ†π
      
      - name: Extract calculation from issue
        id: extract
        run: |
          # Issue Î≥∏Î¨∏ÏóêÏÑú Í≥ÑÏÇ∞Ïãù Ï∂îÏ∂ú
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            # ÏΩîÎ©òÌä∏ÏóêÏÑú Ï∂îÏ∂ú
            CALC=$(echo "${{ github.event.comment.body }}" | grep -oP '/calculate\s+\K.*' | head -1)
          else
            # Issue Î≥∏Î¨∏ÏóêÏÑú Ï∂îÏ∂ú
            CALC=$(echo "${{ github.event.issue.body }}" | grep -oP 'Calculate:\s*\K.*' | head -1)
          fi
          
          echo "calculation=$CALC" >> $GITHUB_OUTPUT
          echo "Extracted calculation: $CALC"
      
      - name: Send to Gemini
        id: gemini
        run: |
          # GeminiÎ°ú Í≥ÑÏÇ∞ Ïã§Ìñâ
          RESULT=$(gemini -p "Calculate ${{ steps.extract.outputs.calculation }} and output ONLY the number result, nothing else" 2>/dev/null | grep -v "Data" | grep -v "Loaded")
          
          echo "result=$RESULT" >> $GITHUB_OUTPUT
          echo "Gemini result: $RESULT"
      
      - name: Post result to issue
        uses: actions/github-script@v6
        with:
          script: |
            const calculation = '${{ steps.extract.outputs.calculation }}';
            const result = '${{ steps.gemini.outputs.result }}';
            
            const comment = `## ü§ñ Gemini Calculation Result
            
            **Expression**: \`${calculation}\`
            **Result**: **${result}**
            
            ---
            üîß Processed by Gemini CLI via GitHub Actions
            ‚è±Ô∏è Timestamp: ${new Date().toISOString()}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
      
      - name: Add labels
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['gemini-processed', 'automated']
            });