# OrchestrEX Memory Management Policy v1.0
# 개발 프로젝트 지원 솔루션을 위한 메모리 관리 정책

metadata:
  version: "1.0"
  purpose: "개발 프로젝트 지원 솔루션의 단기/장기 기억 관리"
  created: "2025-08-22"
  effective_date: "2025-08-22"
  owner: "orchestrator-team"
  policy_id: "mem-v1-20250822"
  checksum: ""  # 배포 시 자동 계산

memory_categories:
  # ========================================
  # SHORT-TERM MEMORY (단기 기억)
  # ========================================
  short_term:
    active_work:
      description: "현재 작업 상태"
      retention: "session_end"
      source: "local"
      schema:
        current_branch: string
        open_prs: "array<number>"
        blocked_by: "array<string>"
        next_immediate: "array<string>"
        
    workflow_state:
      description: "워크플로우 진행 상태"
      retention: "sprint_end"
      source: "local"
      schema:
        last_exec: string
        pending_tasks: "array<string>"
        error_patterns: "array<object>"
        
    team_status:
      description: "역할별 에이전트 상태"
      retention: "24h"
      source: "local"
      schema:
        roles: "map<string,string>"  # {"planner":"healthy","tester":"degraded"}
        
    project_commands:
      description: "프로젝트별 실행 명령"
      retention: "session_end"
      source: "local"
      schema:
        test: string
        build: string
        deploy: string
        common_fixes: "map<string,string>"
        
    daily_routines:
      description: "일일 루틴 패턴"
      retention: "7d"
      source: "local"
      schema:
        pr_review: "array<string>"
        test_flow: "array<string>"
        deploy_flow: "array<string>"

  # ========================================
  # LONG-TERM MEMORY (장기 기억)
  # ========================================
  long_term:
    core_decisions:
      description: "핵심 아키텍처 결정사항"
      retention: "permanent"
      source: "config+db"
      schema:
        naming: "map<string,string>"
        protocol: "map<string,any>"
        exec_dsl: "map<string,array>"
        
    phases:
      description: "프로젝트 단계별 진행"
      retention: "project_end"
      source: "db"
      schema:
        phase1_mvp: "map<string,array>"
        phase2_resilience: "map<string,array>"
        phase3_business: "map<string,array>"
        
    known_issues:
      description: "알려진 문제와 해결법"
      retention: "90d"
      source: "db"
      schema:
        error: string
        solution: string
        frequency: number
        last_seen: datetime
        
    key_files:
      description: "중요 파일 위치"
      retention: "permanent"
      source: "git_repo"
      schema:
        entry: string
        core: "array<string>"
        adapters: "array<string>"
        docs: "array<string>"
        
    never_forget:
      description: "절대 규칙"
      retention: "permanent"
      source: "config"
      values:
        - "tmux는 pane_id 고정 (%3 형식)"
        - "EXEC 명령은 task_id 필수"
        - "PR 생성 시 Issue 번호 참조"
        - "테스트 없이 머지 금지"
        - "챗봇 기억 의존 X, EXEC 결정론적 실행"
        
    proven_routines:
      description: "검증된 워크플로우"
      retention: "permanent"
      source: "db"
      schema:
        name: string
        exec_sequence: "array<string>"
        success_rate: number
        n_runs: number
        promotion_rule: "success_rate>=0.9 AND n_runs>=5"  # KPI 연동 기준
        
    project_patterns:
      description: "프로젝트별 패턴"
      retention: "project_end"
      source: "db"
      schema:
        project_name: string
        test_cmd: string
        build_cmd: string
        deploy_target: string

  # ========================================
  # CACHE ONLY (캐시)
  # ========================================
  cache_only:
    github_state:
      description: "GitHub 상태 - GitHub가 Source of Truth"
      retention: "1h"
      source: "github_api"
      refresh: "on_demand"
      invalidation: "webhook:pull_request|issues"
      
    dependency_status:
      description: "의존성 상태"
      retention: "24h"
      source: "github_api"
      invalidation: "package.json 변경"
      
    ci_cd_status:
      description: "CI/CD 파이프라인 상태"
      retention: "30m"
      source: "github_actions"
      invalidation: "workflow_run event"

  # ========================================
  # NEVER STORE (저장 금지)
  # ========================================
  never_store:
    keywords:
      - "full_conversation_log"     # 전체 대화 로그
      - "raw_debug_output"          # 디버그 출력
      - "api_keys"                  # API 키
      - "passwords"                 # 패스워드
      - "personal_data"             # 개인정보
      - "large_payloads"            # 대용량 페이로드 (>1MB)
    patterns:  # 정규식 기반 필터링
      - "/(?i)(secret|token|api[_-]?key|password)/"
      - "/(?i)(bearer|authorization):\\s*.+/"
      - "/\\b[A-Za-z0-9+/]{40,}\\b/"  # base64 encoded secrets

# ========================================
# RETENTION RULES (보존 규칙)
# ========================================
retention_rules:
  session_end:
    trigger: "CLI 종료 또는 4시간 무활동"
    action: "삭제"
    
  sprint_end:
    trigger: "스프린트 종료 (1-2주)"
    action: "장기 기억으로 이동 또는 삭제"
    
  24h:
    trigger: "생성 후 24시간"
    action: "재조회 또는 삭제"
    
  7d:
    trigger: "생성 후 7일"
    action: "조건부 승격 또는 삭제"
    condition: "proven_routines.promotion_rule"  # KPI 기준과 연결
    
  90d:
    trigger: "생성 후 90일"
    action: "사용 빈도 낮으면 아카이브"
    condition: "frequency < 5 in last 30d"
    
  project_end:
    trigger: "프로젝트 종료"
    action: "아카이브 후 삭제"
    
  permanent:
    trigger: "없음"
    action: "영구 보존"

# ========================================
# SYNC RULES (동기화 규칙)
# ========================================
sync_rules:
  github_api:
    frequency: "on_pr_event"
    fallback: "1h"
    invalidation: "webhook:pull_request|issues|push"
    rate_limit: "5000/hour"
    
  local_to_db:
    frequency: "on_milestone"
    fallback: "daily at 00:00"
    batch_size: 100
    
  cache_invalidation:
    trigger: "webhook_event"
    fallback: "ttl_expiry"
    cascade: true  # 의존 캐시도 무효화

# ========================================
# ROLE MAPPING (역할 매핑)
# ========================================
role_mapping:
  configurable: true
  key_pattern: "^[a-zA-Z0-9_-]+(@[a-zA-Z0-9_-]+)?$"  # 키 검증 정규식
  defaults:
    pm: "claude@orchestrator"
    planner: "claude@planning"
    analyzer: "chatgpt@analysis"
    tester: "gemini@testing"
    coder: "codex@implementation"
  fallback:
    unknown_role: "claude@general"

# ========================================
# VALIDATION RULES (검증 규칙)
# ========================================
validation:
  on_load:
    - "role_mapping.defaults의 모든 값이 key_pattern 매치"
    - "never_store.patterns의 정규식 컴파일 가능"
    - "retention_rules.*.condition의 KPI 필드 존재"
    
  on_save:
    - "schema 타입 매치"
    - "never_store 키워드/패턴 체크"
    - "크기 제한 (단일 값 < 100KB)"
    
  on_sync:
    - "source of truth 일치"
    - "캐시 TTL 만료 확인"
    - "rate limit 체크"